---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by asus.
--- DateTime: 2022/5/25 22:33
---

Object:subClass("BasePanel")

BasePanel.panelTransform = nil
BasePanel.panelGameObject = nil
BasePanel.resident = false
BasePanel.abName = nil
BasePanel.resName = nil

function BasePanel:Init(abName, resName)
    self.abName = abName
    self.resName = resName
    PanelManager:AddPanel(resName, self)
end

function BasePanel:ViewInit() end
function BasePanel:AfterOpen() end
function BasePanel:AddListener() end
function BasePanel:RemoveListener() end
function BasePanel:BeforeClose() end

function BasePanel:Open()
    local function Create()
        local prefab = AssetBundleManager:LoadResources(self.abName, self.resName, typeof(GameObject))
        self.panelGameObject = GameObject.Instantiate(prefab)
        self.panelTransform = self.panelGameObject:GetComponent(typeof(RectTransform))
        UIRoot:SetParent(self.panelTransform)
        self.panelGameObject:SetActive(false)
    end

    if self.panelTransform == nil then
        Create()
    end

    if self.panelGameObject.activeSelf then return end
    UIRoot:SetParent(self.panelTransform)
    self.panelGameObject:SetActive(true)

    self:ViewInit()
    self:AddListener()
    self:AfterOpen()
end

function BasePanel:Close()
    if self.panelGameObject.activeSelf == true then
        self:RemoveListener()
        self:BeforeClose()

        if self.resident then
            self.panelGameObject:SetActive(false)
        else
            GameObject.Destroy(self.panelGameObject)
            self.panelTransform = nil
        end
    end
end
